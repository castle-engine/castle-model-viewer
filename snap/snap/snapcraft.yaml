# TODO: this downloads master of cge,castle-model-viewer.
# Use tags instead to build precise version.

name: castle-model-viewer

# The base snap is the execution environment for this snap.
base: core20

version: '4.4.0'
summary: Viewer for 3D and 2D models - glTF, X3D, VRML, Spine JSON and more # 79 char long summary
description: |
  Viewer for all 3D and 2D models suported by Castle Game Engine:

  - glTF,
  - X3D,
  - VRML,
  - Collada,
  - 3DS,
  - MD3,
  - Wavefront OBJ,
  - STL
  - (2D) Spine JSON
  - sprite sheets (in Castle Game Engine, Cocos2d, Starling XML formats).

  Explore the virtual world with collisions, gravity, animations, sensors,
  shadows, mirrors, shaders and more. You can also convert all models to X3D.

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots

# TODO: are freedesktop stuff (icons, mime types and assignments) set up by this?
# test on clean system.

apps:
  castle-model-viewer:
    command: usr/bin/castle-model-viewer
    plugs:
      - x11
      - opengl
      - audio-playback
      - home
      - removable-media
      # support all desktop versions on X, see https://forum.snapcraft.io/t/the-desktop-interfaces/2042 , as we initialize OpenGL using glX
      - desktop
      - desktop-legacy
      - unity7
  castle-model-converter:
    command: usr/bin/castle-model-converter
    plugs:
      - home
      - removable-media

parts:
  # FPC part. We need FPC to compile CGE build tool and castle-model-viewer.
  #
  # It would be easier to get FPC from Ubuntu packages, by dependency in CGE:
  # build-packages:
  #   - fpc
  #
  # Unfortuntely, Ubuntu core20 has too old FPC (3.0.4), https://packages.ubuntu.com/focal/fpc
  # Newer Ubuntu has good FPC (>= 3.0.2), but there's no core22 yet,
  # and we cannot use "impish" or "21.10" for base of Snap.
  #
  # So instead we get FPC DEB from Lazarus.
  # Various other solutions are possible (like get FPC from source and compile,
  # using https://gitlab.com/freepascal.org/fpc/source/ and source-tag:release_3_2_2).
  fpc:
    plugin: nil
    override-build: |
      wget https://sourceforge.net/projects/lazarus/files/Lazarus%20Linux%20amd64%20DEB/Lazarus%202.2.0/fpc-laz_3.2.2-210709_amd64.deb
      sudo apt-get install -f ./fpc-laz_3.2.2-210709_amd64.deb
    build-packages:
      - wget

  # CGE part. We need CGE build tool and sources to later build castle-model-viewer.
  castle-engine:
    # Specify after, otherwise parts execute in any order. See https://snapcraft.io/docs/parts-lifecycle#heading--step-dependencies
    after:
      - fpc
    build-packages:
      - libgl-dev
    source: https://github.com/castle-engine/castle-engine/
    source-type: git
    # See 'snapcraft plugins'
    # https://snapcraft.io/docs/make-plugin
    plugin: nil
    override-build: |
      # Copy, while sources are clean.
      cp -Rf . $SNAPCRAFT_PART_INSTALL/cge-source

      tools/build-tool/castle-engine_compile.sh

      # Copy to install/bin in snapcraft filesystem.
      # This allows to later use it with stage: ... filelist.
      # See https://github.com/snapcore/snapd/blob/master/build-aux/snap/snapcraft.yaml .
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cp -f tools/build-tool/castle-engine $SNAPCRAFT_PART_INSTALL/bin
    stage:
      - bin/castle-engine
      - cge-source/*
    # No point in priming (copying to final snap) CGE sources or build tool, would only take up disk space
    # TODO: looks like it didn't help, they are still in installed snap in /snap/castle-model-viewer/current/ .
    prime: []

  # Actual castle-model-viewer application part.
  castle-model-viewer:
    after:
      - castle-engine
    source: https://github.com/castle-engine/castle-model-viewer/
    source-type: git
    build-packages:
      - libgl-dev
      - libgtk2.0-dev
    # Make $CASTLE_ENGINE_PATH point to CGE source at building.
    build-environment:
      - CASTLE_ENGINE_PATH: "$SNAPCRAFT_STAGE/cge-source"
    # See 'snapcraft plugins'
    # https://snapcraft.io/docs/make-plugin
    override-build: |
      make
      make install PREFIX=$SNAPCRAFT_PART_INSTALL/usr
    plugin: make
    # TODO: anything else? see compiling_from_sources.php
    stage-packages:
      # about using OpenGL in Snaps see
      # https://forum.snapcraft.io/t/opengl-interface/12705
      # https://forum.snapcraft.io/t/adding-opengl-gpu-support-to-a-snap/6273
      # https://snapcraft.io/docs/games-interfaces
      - libglx-mesa0
      - libgl1
      - libgtk2.0-0
      # TODO: test openal
      - libopenal1
